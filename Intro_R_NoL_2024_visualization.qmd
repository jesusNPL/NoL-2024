---
title: "NoL -- Intro to R"
description: Mapping biodiversity and visualization!
date: today # other options: now, last-modified
authors:
  - name: Dr. Jesús N. Pinto-Ledezma 
    url: https://jesusnpl.github.io
    affiliation: Ecology, Evolution & Behavior, University of Minnesota 
    affiliation-url: https://jesusnpl.github.io 
title-block-banner: true
#title-block-banner: "#562457"
format: 
  html: 
    embed-resources: true # save contained file.
    theme: spacelab # check other themes https://quarto.org/docs/output-formats/html-themes.html 
    code-fold: true
    toc: true
    number-sections: true
bibliography: Intro_R_NoL.bib
link-citations: true
csl: apa-single-spaced.csl
---

Today we will learn basic tools in R for visualizing species distributions.

You will need three datasets, that will be provided for you:

1. Species occurrence data points -- **live.oaks.csv** 

2. Species geograhical ranges -- **furnariides_sample.shp** 

3. Environmental variables -- **bio1.bil and bio12.bil**

# Set up your data and your working directory

Set up a working directory and put the data files in that directory. Tell R that this is the directory you will be using, and read in your data:

```{r}
#| eval: false

setwd("your path name")

```

To do this laboratory you will need to have a set of R packages. Install the following packages:

```{r}
#| eval: false

packages <- c("tidyverse", "sf", "scico", "rnaturalearth", 
              "rnaturalearthdata", "viridis", 
              "terra", "rasterVis", "RColorBrewer") 
# Package vector names

```

:::{.callout-tip}
## Function install.packages()
You can use the function **install.packages()** to install the packages.
:::

If you don't want to install the packages one by one, you can use the next command. 

```{r}
#| eval: false

# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())

if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages], dependencies = TRUE)
}

```

This command, will, first, check if you already the packages installed, then if a package is not installed in your computer, will install it.

:::{.callout-caution collapse="true"}
## IMPORTANT

When installing multiple packages, please pay **attention** to the messages in your R console. In some cases, R will ask you if you want to install the **source** version. If that is the case, just type **n** and hit enter. 

:::

Load installed packages:

```{r}
#| eval: true

library(tidyverse)
library(scico)
library(rnaturalearth)
library(terra)
library(sf)

```

Double-check your working directory. 

:::{.callout-tip}
## Function getwd()
You can use the function **getwd()** to get the current working directory.
:::

# From point occurrences to range maps

We will start setting the geographical extent of our study area and to do that we will use spatial data from the package {rnaturalearth}.

```{r}
#| eval: true

sf_use_s2(FALSE)

# Get world map from the {rnaturalearthdata} package
worldMap <- ne_countries(scale = "medium", 
                         type = "countries", 
                         returnclass = "sf")

# cCountry subset - The United States and Mexico
NApoly <- worldMap %>% 
  filter(admin == "United States of America" | admin == "Mexico")

# trim to study area
limsNA <- st_buffer(NApoly, dist = 1) %>% 
  st_bbox() 

# neighboring countries
adjacentPolys <- st_touches(NApoly, worldMap)

neighbours <- worldMap %>% 
  slice(pluck(adjacentPolys, 1))

```

We can plot the resulting map.

```{r}
#| eval: true

ggplot() +
  geom_sf(data = neighbours, color = "white") +
  geom_sf(data = NApoly) +
  coord_sf(
    xlim = c(limsNA["xmin"], limsNA["xmax"]),
    ylim = c(limsNA["ymin"], limsNA["ymax"])
  ) +
  theme(
    plot.background = element_rect(fill = "#f1f2f3"),
    panel.background = element_rect(fill = "lightblue"),
    panel.grid = element_blank(),
    line = element_blank(),
    rect = element_blank()
  )

```

Hmmmm, that is somewhat ugly, let's adjust the coordinates a bit the map and plot it again...

```{r}
#| eval: true

ggplot() +
  geom_sf(data = neighbours, color = "white") +
  geom_sf(data = NApoly) +
  coord_sf(
     xlim = c(-125, -65),
    ylim = c(10, 50)
  ) +
  theme(
    plot.background = element_rect(fill = "#f1f2f3"),
    panel.background = element_rect(fill = "lightblue"),
    panel.grid = element_blank(),
    line = element_blank(),
    rect = element_blank()
  )

```

Much, much better!

Load species occurrences data points. We will use occurrences from Live oaks, that were obtained from iDigBio between 20 and 24 July 2018 by Jeannine Cavender-Bares. Notice that these occurrence data points were visually examined and any localities that were outside the known range of the species, or in unrealistic locations (e.g., water bodies, crop fields) were discarded. 

```{r}
#| eval: true

oaks_occ <- read_delim("data/live.oaks.csv") %>% 
  filter(Species != "Hybrid") # removing hybrid observations

oaks_occ %>% 
  count(Species) # check how many species and how many observations per species

# Visualize

oaks_occ %>% 
  count(Species) %>% 
  ggplot(aes(x = Species, y = n)) + 
  geom_bar(stat = "identity") + 
  coord_flip() + 
  ylab("Number of observations") + 
  theme_bw()

```

Transform data.frame to spatial data.frame

```{r}
#| eval: true
# to sf object, specifying variables with coordinates and projection
oaks_occ_sf <- st_as_sf(oaks_occ, # data.frame object
                        coords = c("Longitude", "Latitude"), # coordinates names
                        crs = 4326) %>% # coordinates system
  #group_by(species) %>%
  st_cast("MULTIPOINT") %>% 
  group_by(Species) %>% 
  summarize()

glimpse(oaks_occ_sf)

```

*What variables we have in the oaks_occ object?* 

**Answer:**
There are three variables, species, longitude and latitude.

*How many oak species are in the dataset?*

**Answer:**
There are seven oak species.


```{r}

unique(oaks_occ$Species)

```

What we did in the previous code was simply to transform a the data.frame object into a **spatial data.frame**. We can plot the results.

```{r}
#| eval: true

ggplot() +
  geom_sf(data = neighbours, color = "white") +
  geom_sf(data = NApoly) + 
  geom_sf(data = oaks_occ_sf, aes(color = Species), alpha = 0.7) + 
  coord_sf(
     xlim = c(-125, -65),
    ylim = c(10, 50)
  ) +
  theme(
    plot.background = element_rect(fill = "#f1f2f3"),
    panel.background = element_rect(fill = "lightblue"),
    panel.grid = element_blank(),
    line = element_blank(),
    rect = element_blank()
  )

```

Nice!

## Range maps from point data

In this section we will learn how to create “simple” range maps based on geometry (e.g. minimum convex polygons, etc.), without considering environmental variables (e.g., ENMs or SDMs). Note that these range maps are geographical abstractions of the species ranges. In other words, **a species range is the area where a particular species can be found during its lifetime. Species range includes areas where individuals or communities can migrate or hibernate**

We will explore two alternative, one based on simple **convex hull** and the other is the **smoothed convex hull**

### Convex hull

```{r}
#| eval: true

# Observations to convex hull
oaks_CH <- st_convex_hull(oaks_occ_sf) 

# plot hulls
ggplot() +
  geom_sf(data = neighbours, color = "white") +
  geom_sf(data = NApoly) +
  geom_sf(data = oaks_CH, aes(fill = Species), alpha = 0.7) +
  scale_fill_scico_d(palette = "davos", direction = -1, end = 0.9) +
  coord_sf(
    xlim = c(-125, -65),
    ylim = c(10, 50)
  ) +
  theme(
    plot.background = element_rect(fill = "#f1f2f3"),
    panel.background = element_rect(fill = "lightblue"),
    panel.grid = element_blank(),
    line = element_blank(),
    rect = element_blank()
  )

```

Until here we have explored how to plot, clean and build species geographical ranges using occurrences. Now we will use a sample of species geographical ranges of the largest continental endemic radiation (**Furnariides**) to explore the geographical gradients of species diversity.

# Diversity gradients

## Prepare data and mapping

The geographical ranges correspond to the Infraorder Furnariides (Aves). This data is available thorough [BirdLife International](http://datazone.birdlife.org/species/requestdis) and you can use any other group available on IUCN or BIEN (for plants in the Americas). In any case, you first need to download the polygons in shapefile format.

To load the Furnariides geographical ranges, we will use the function **st_read()** from the package **{sf}**. Please read the message printed on your console and try to understand the data.

```{r}
#| eval: true

franges <- st_read("data/furnariides_sample.shp") 

```

Explore the imported data. 

```{r}
#| eval: true

class(franges)

```

Now see all the data information.

```{r}
#| eval: true

glimpse(franges)

```

*What variables are present in the spatial polygon object?* and *How many species?*

**Answer:**
There are 217 species in this spatial object. The variables included are: Perimeter, Area, AreaKM2, RD, DR, BodyMass, DietInv, DietFruit, DietSeed, StratGroun, Understory, Midhigh, Canopy, Ages.

```{r}

length(unique(franges$SCINAME))

frangesVars <- names(franges)[2:15]

frangesVars

```


Let's plot a couple of species. 

```{r}
#| eval: true

selSPP <- franges %>% 
  filter(SCINAME == "Batara cinerea" | SCINAME == "Asthenes modesta")

# country subset
SApoly <- worldMap %>% 
  filter(continent == "South America")

```


```{r}
#| eval: true

# plot the selected ranges
ggplot() +
  geom_sf(data = SApoly, alpha = 0.5) +
  geom_sf(data = selSPP, aes(fill = SCINAME), alpha = 0.7, size = 2) +
  scale_fill_scico_d(palette = "davos", direction = 1, 
                     end = 0.9) +
  coord_sf(
    xlim = c(-80, -35),
    ylim = c(10, -60)
  ) + 
  theme_classic() + 
  theme(
    plot.background = element_rect(fill = "#f1f2f3"),
    panel.background = element_rect(fill = "lightblue"),
    panel.grid = element_blank(),
    line = element_blank(),
    rect = element_blank()
  )

```

*Explain the distribution for both species (i.e., Asthenes modesta [blue polygon] and Batara cinerea [yellow polygon])* *Are these species distributed in sympatry or allopatry? Explain the selected distribution pattern.* 

**Answer:**
*A. modesta* is widely distributed mostly in the highlands of South America (Argentina, Bolivia, Chile and Perú). *B. cinerea* has a more restricted and disjunct distribution mostly in the lowlands of South America (Argentina, Bolivia, Brazil and Paraguay). These two species present an allopatric distribution

## Raster of species richness

Species richness is the number of different species represented in an ecological community, landscape or region. Species richness is simply a count of species, and it does not take into account the abundances of the species or their relative abundance distributions.

Now, let's create a map that represent the species richness of Furnariides.

First create an empty raster for the Neotropics using the extent of the Furnariides ranges under a spatial resolution of 1º long-lat or 111 km at the equator.

```{r}
#| eval: true

# Create raster ro store richness values
neo_ras <- rast() # empty raster

ext(neo_ras) <- ext(franges) # Set the raster "extent" 

res(neo_ras) <- 1 # Set the raster "resolution" 

neo_ras # print the raster object in the console

values(neo_ras) <- 0 # assign O values to all pixels in the raster

```

Plot empty raster for the Neotropics

```{r}
#| eval: true

# transform the sf object to a sp object
SApoly_sp <- as(SApoly, "Spatial") 

# Plot empty raster
plot(neo_ras)

plot(SApoly_sp, add = TRUE) ## overlay SA countries to the SR map


```

Now using the empty raster we will **rasterize** the species identities in each cell or pixel. The resulting raster will be the species richness of Furnariides across the Neotropics.

```{r}
#| eval: true

f_sr_raster <- terra::rasterizeGeom(x = vect(franges), # species geographical ranges
                         y = neo_ras, # empty raster
                         fun = "count" # count number of species per grid cell
                         )
# this process can take a while depending on your computer (~15 secs in Jesús's computer), please be patient.

```

Plot the resulting raster.

```{r}
#| eval: true

plot(f_sr_raster)

```

Let's try changing the colors using the package {viridis}

```{r}
#| eval: true

# country subset
Apoly <- worldMap %>% 
  filter(continent == "South America" | continent == "North America")

# transform the sf object to a sp object
Apoly_sp <- as(Apoly, "Spatial") 

# Plot the information
plot(mask(f_sr_raster, Apoly), # raster of species richness
     col = viridis::turbo(10), # colors
     zlim = c(min(values(f_sr_raster), 
                  max(values(f_sr_raster)))), 
     main = "Furnariides species richness") 

plot(Apoly_sp, add = TRUE) ## overlay SA countries to the SR map

```

Or we can try a more fancy way to plot the number of Furnariids' species. To do that we can use the package {rasterVis} for plotting and the package {RColorBrewer} for selecting color combinations.

```{r}
#| eval: true

library(rasterVis)
library(RColorBrewer)

# First set a theme
mapTheme <- rasterTheme(region = rev(brewer.pal(11, "Spectral")),
  layout.widths = list(right.padding = 10),
  axis.line = list(col = "transparent"),
  tick = list(col = 'transparent'))

## Now we can plot the raster
p_furna_SR <- levelplot(mask(f_sr_raster, Apoly),
  maxpixels = 1e10,
  margin = FALSE, 
  main = list('Furnariides \n species richness', col = 'darkgray'), 
  par.settings = mapTheme,
  scales = list(x = list(draw = TRUE),
                y = list(draw = TRUE)),
  zlim = c(0, 180)) 

p_furna_SR

```

*Awesome, right?. Now, please, describe the observed pattern!*

**Answer:**
The map shows the classic latitudinal diversity gradient, with a higher accumulation of species close to the equator and a continued decline in the number of species as we approach the South Pole.

Save the figures 

```{r}
#| eval: true

pdf(file = "figures/Figure_1_SR.pdf", 
    width = 8, height = 10)

p_furna_SR

dev.off()

```


## Correlative relationships - species richness as a function of evolutionary history

Let's try to rasterize another information from the polygon data set. We will use the information in the column **RD**, this data correspond to the numbers of nodes from the tips to the root of a phylogenetic tree or just **root distance**, thus, will use the RD to calculate the MRD metric **(mean root distance)** that measures the evolutionary derivedness of species within an assemblage [@kerr_relative_1999] and can be used to determine whether a local fauna is constituted primarily by early-diverged or by recently originated species [@hawkins_different_2012; @pinto-ledezma_geographical_2017]. In other words, high MRD values means that the community (i.e., grid-cell) is composed mostly by recently originated species, whereas low MRD values by early-diverged species.

```{r}
#| eval: true

franges

```

Rasterize the species' **Root distance** to create a map of **Mean Root Distance**.

```{r}
#| eval: true

f_MRD_raster <- terra::rasterize(vect(franges), # polygons
                          neo_ras, # empty raster
                          field = "RD", # Root distance
                          fun = mean # function mean
                          )

```

Plot the results

```{r}
#| eval: true

plot(f_MRD_raster, 
     main = 'Furnariides mean root distance')

plot(Apoly_sp, add = TRUE)

```

Let's try changing the colors.

```{r}
#| eval: true

## Now we can plot the raster
p_furna_MRD <- levelplot(f_MRD_raster,
  maxpixels = 1e10,
  margin = FALSE, 
  main = list('Furnariides \n mean root distance', col = 'darkgray'), 
  par.settings = mapTheme,
  scales = list(x = list(draw = TRUE),
                y = list(draw = TRUE)),
  zlim = c(0, 25))

p_furna_MRD

```

*Based on the description provided above, please describe the MRD pattern*

**Answer:**
The map of mean root distance (MRD) shows an inverse pattern when compared with the patterns of species richness. Specifically, areas/pixels with a high number of species present low MRD, and areas/pixels with a low number of species have high MRD values. This might suggest that areas with low number of co-occurring species are mostly composed by recently-evolved species, conversely, areas with high number of species by species that diverged early in the evolutionary history of the clade.

Let's plot both raster.

```{r}
#| eval: true

par(mfrow = c(1, 2))

plot(mask(f_sr_raster, Apoly), 
     col = viridis::plasma(10), 
     main = "Furnariides species richness")

plot(mask(f_MRD_raster, Apoly), 
     col = viridis::plasma(10), 
     main = "Furnariides mean root distance")

#dev.off()

```

Check if there is a relationship between the species richness and the evolutionary derivedness.

```{r}
#| eval: true

cor.test(values(f_sr_raster), values(f_MRD_raster))

```

Or as in the previous lab, we can create a model that explain the association.

```{r}
#| eval: true

obj <- lm(values(f_sr_raster) ~ values(f_MRD_raster))

summary(obj)

```

```{r}
#| eval: true

# get pixel values from raster richness
data_sr <- as.data.frame(f_sr_raster, xy = TRUE) 

# get pixel values from raster MRD
data_mrd <- as.data.frame(f_MRD_raster, xy = TRUE)

# Combine both datasets
data_sr_mrd <- left_join(data_sr, data_mrd, by = c("x", "y")) %>% 
  rename(SR = area, MRD = RD) %>% 
  drop_na(MRD)

# Plot the association
data_sr_mrd %>% 
  ggplot(aes(x = MRD, y = SR)) + 
  geom_point(color = "darkgray", size = 3, alpha = 0.5) + 
  geom_smooth(method = "lm") + 
  labs(x = "Mean Root Distance", 
       y = "Species Richness") + 
  theme_classic() + 
  theme(
    axis.text = element_text(size = 15, colour = "black"),
    axis.title = element_text(size = 18) 
    )

```

Hmmm. What happened in here? 

*From the mean root distance map, it is possible to explain the Furnariides diversity gradient? If so, please explain from an evolutionary perspective*.

**Answer:**
Species-rich areas present low MRD values, and species-poor areas present high MRD values. MRD is a metric that measures deriveness, and high MRD means that assemblages are composed of recently evolved species. This can also be interpreted as these pixels/areas also present higher speciation rates. On the contrary, areas with low MRD will present low rates of speciation, and the higher species richness in these areas is a product of steady but low rates of speciation.

:::{.callout-tip}
## Save the figures
There are multiple options to save the figures. Jesús particularly like saving his figures in **PDF**. To save the figures in a pdf file, you can use the following code.

pdf(file = "figures/Figure_2_association_MRD_SR.pdf", height = 5, width = 7)

data_sr_mrd %>% 
  ggplot(aes(x = MRD, y = SR)) + 
  geom_point(color = "darkgray") + 
  geom_smooth(method = "lm") + 
  labs(x = "Mean Root Distance", 
       y = "Species Richness") + 
  theme_classic()
  
dev.off()

This lines will save your figure in your working directory.
:::

### Precipitation and Temperature

Load the environmental variables that correspond to bio1 (**Annual Mean Temperature**) and bio12 (**Annual Precipitation**). These data correspond to two variables out of 19 from WorldClim (http://www.worldclim.org/current). We will use these two variables just for educational purposes, rather to make a complete evaluation of the species-environmental relationships.

```{r}
#| eval: true

# Annual Mean Temperature
bio1 <- rast("data/bio1.bil")
bio1 <- bio1/10

# Annual Precipitation
bio12 <- rast("data/bio12.bil")
bio12

```

Plot the environmental variables

```{r}
#| eval: true

plot(bio1) 

plot(bio12)

```

Ok, the bio1 and bio12 layers are at global scale, so now will need to crop them to the extent of the Neotropics.

```{r}
#| eval: true

bio1_neo <- crop(bio1, ext(franges))
bio12_neo <- crop(bio12, ext(franges))

```

```{r}
#| eval: true

par(mfrow = c(1, 2))

plot(bio1_neo, main = "Annual Mean Temperature", 
     col = rev(viridis::inferno(10)))

plot(bio12_neo, main = "Annual Precipitation", 
     col = rev(viridis::inferno(10)))


```

Much better!

Obtain the values from bio1, bio12, SR and MRD for each cell or pixel using the coordinates.

```{r}
#| eval: true

# Get environmental data using coordinates from our maps
f_ras_bios <- extract(x = c(bio1_neo, bio12_neo), # environmental variables
                      y = data_sr_mrd[, c("x", "y")]) %>% # coordinates
  rename(MAT = bio1, MAP = bio12)

# Combine the information
fdata <- bind_cols(data_sr_mrd, f_ras_bios)

head(fdata)

```

Now make a simple correlation between the Furnariides richness and bio1 and bio12.

Species richness correlated with Temperature

```{r}
#| eval: true

cor.test(fdata$SR, fdata$MAT)

```

Species richness correlated with Precipitation

```{r}
#| eval: true

cor.test(fdata$SR, fdata$MAP)

```

And also the linear model...

```{r}
#| eval: true

lmbio1 <- lm(SR ~ MAT, data = fdata)

summary(lmbio1)

lmbio12 <- lm(SR ~ MAP, data = fdata)

summary(lmbio12)

```

*Which environmental variable is more related with Furnariides richness?*

**Answer:**
Both MAT and MAP are positively associated with the number of species. However, MAP shows a more steeper association than MAT. Also, MAP (R\^2 = 0.43) explain more variance than MAT (R\^2 = 0.24). 


*Please explain the relationship from an ecological perspective*

**Answer:**
The positive association between MAP and MAT with the number of species suggests that wetter and hotter areas contain more species. This might suggest that these areas present high local heterogeneity, allowing more species to coexist or to accumulate over time. 

```{r}
#| eval: true

fdata %>% 
  ggplot(aes(x = MAT, y = SR)) + 
  geom_point(color = "darkgray") + 
  geom_smooth(method = "lm") + 
  labs(x = "Mean Annual Temperature", 
       y = "Species Richness") + 
  theme_classic() + 
  theme(
    axis.text = element_text(size = 15, colour = "black"),
    axis.title = element_text(size = 18) 
    )

fdata %>% 
  ggplot(aes(x = MAP, y = SR)) + 
  geom_point(color = "darkgray") + 
  geom_smooth(method = "lm") + 
  labs(x = "Annual Precipitation", 
       y = "Species Richness") + 
  theme_classic() + 
  theme(
    axis.text = element_text(size = 15, colour = "black"),
    axis.title = element_text(size = 18) 
    )

```
### Precipitation and Temperature for Minnesota
US states information was obtained from [here](https://hub.arcgis.com/datasets/1b02c87f62d24508970dc1a6df80c98e/explore)

Read spatial information 

```{r}
#| eval: true

US_states <- st_read("data/States_shapefile-shp/States_shapefile.shp") 

glimpse(US_states)

```
Filter the state of Minnesota

```{r}
#| eval: true

MN <- US_states %>% 
  filter(State_Name == "MINNESOTA")

```

Plot the United States and highlight Minnesota

```{r}
#| eval: true

ggplot() +
  geom_sf(data = US_states, alpha = 0.5) +
  geom_sf(data = MN, aes(fill = State_Name), alpha = 0.7, size = 2) +
  scale_fill_scico_d(palette = "davos", direction = 1, 
                     end = 0.9) +
  theme_classic() + 
  theme(
    plot.background = element_rect(fill = "#f1f2f3"),
    panel.background = element_rect(fill = "lightblue"),
    panel.grid = element_blank(),
    line = element_blank(),
    rect = element_blank()
  )

```

Get precipitation and temperature for the state of Minnesota

```{r}
#| eval: true

MN_mat <- crop(bio1, MN)

MN_ap <- crop(bio12, MN)

```

Plot Minnesota temperature and precipitation

```{r}
#| eval: true

par(mfrow = c(1, 2))

plot(MN_mat, main = "Annual Mean Temperature", 
     col = rev(viridis::inferno(10)))
plot(as(MN, "Spatial"), add = TRUE, lwd = 2, border = "green")

plot(MN_ap, main = "Annual Precipitation", 
     col = rev(viridis::inferno(10)))
plot(as(MN, "Spatial"), add = TRUE, lwd = 2, border = "green")

```

The end! for now...